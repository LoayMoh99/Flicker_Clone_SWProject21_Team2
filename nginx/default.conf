log_format upstreamlog '$server_name to: $upstream_addr [$request] '
        'upstream_response_time $upstream_response_time'
        'msec $msec request_time';

upstream api{
  server api:4000;
  server api:4001;
  server api:4002;
}

upstream front {
  server front:3000;
  server front:3001;
  server front:3002;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  server_name _;

  access_log /var/log/nginx/access.log upstreamlog;

  location /api{
          set $cors '';
          if ($http_origin ~ '^https?://(localhost|www\.yourdomain\.com|www\.yourotherdomain\.com)') {
                  set $cors 'true';
          }

          if ($cors = 'true') {
                  add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                  add_header 'Access-Control-Allow-Credentials' 'true' always;
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                  add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
                  # required to be able to read Authorization header in frontend
                  #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
          }

          if ($request_method = 'OPTIONS') {
                  # Tell client that this pre-flight info is valid for 20 days
                  add_header 'Access-Control-Max-Age' 1728000;
                  add_header 'Content-Type' 'text/plain charset=UTF-8';
                  add_header 'Content-Length' 0;
                  return 204;
          }


          rewrite ^/api(.*) $1 break;
          proxy_pass http://api;
  }

  location / {
    proxy_pass http://front;
  }
}